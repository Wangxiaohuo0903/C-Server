events {
    worker_connections 1024;  # 每个 worker 进程可以建立的最大连接数
}

http {
    # 配置代理缓存路径和规则
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    upstream myapp {
        server localhost:8080 weight=3;  # 后端服务器1，权重3
        server localhost:8081 weight=2;  # 后端服务器2，权重2
        server localhost:8082 weight=1;  # 后端服务器3，权重1
    }

    server {
        listen 80;  # 监听 80 端口

        location / {
            proxy_pass http://myapp;  # 请求转发到 myapp
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # /login 路径的配置
        location /login {
            proxy_pass http://myapp/login;  # 考虑是否真的要缓存登录请求，此处仅作为示例
            proxy_cache my_cache;  # 使用 my_cache 缓存
            proxy_cache_valid 200 302 10m;  # 缓存有效时间为 10 分钟
            proxy_cache_methods GET;  # 允许缓存 GET 请求（但请根据实际需求决定是否缓存）
        }

        # /register 路径的配置
        location /register {
            proxy_pass http://myapp/register;  # 请求转发到 myapp 的 /register 路径
            proxy_cache my_cache;  # 使用 my_cache 缓存
            proxy_cache_valid 200 302 10m;  # 缓存有效时间为 10 分钟
            proxy_cache_methods GET;  
        }

        # /upload 路径的配置
        location /upload {
            proxy_pass http://myapp/upload;  # 请求转发到 myapp 的 /upload 路径
            proxy_cache my_cache;  # 使用 my_cache 缓存
            proxy_cache_valid 200 302 10m;  # 缓存有效时间为 10 分钟
            proxy_cache_methods GET;  
        }
    }
}